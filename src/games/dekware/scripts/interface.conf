
# these are possible video service providers
# the image service and video service need to be
# matched correctly, otherwise they will not
# function as expected...

# a unified plugin available under windows or linux.
linux module bag.display.plugin
linux alias service image display_image

# under windows, these are client display interfaces
# under linux, these are not available.
#module bag.video.alt.plugin
#module bag.image.alt.plugin

# under windows these are native image/video interfaces
# under linux, these are msgsvr based display interfaces
#.if defined __STATIC__
# module bag.video.plugin.static
#.else
 win32 module bag.image.plugin
 win32 module bag.video.plugin
#.endif

# native win32 api
# kept for historical and example sake.
win32 alias service render video
win32 alias service image real_image

# file based options - encrypted 
#win32 service=options_quiet library=futgetpr.dll load=GetQuietInterface unload=DropAnyInterface
#win32 service=futgetpr      library=futgetpr.dll load=GetInteractiveInterface unload=DropAnyInterface
#win32 service=futgetpr_text library=futgetpr_txt.dll load=GetInteractiveInterface unload=DropAnyInterface
# MySQL options - uses futgetpr to bootstrap connection
# SQL based options - MySQL ODBC preferred (required?)
#win32 service=SQLoptions    library=getoption.dll load=GetOptionInterface unload=DropOptionInterface

win32 module altanik.core

# select which one to use as default 'options' interface...
win32 alias service options futgetpr

#dialog/widget services...
# hm this is incomplete yet...
#win32 service=controls library=psi.dll load=GetControlInterface unload=DropControlInterface

linux module libaltanik.core.so
linux alias service options futgetpr_text

# hm this is incomplete yet...
#linux service=controls library=libpsi.so load=GetInterface unload=DropInterface


