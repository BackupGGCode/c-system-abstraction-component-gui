multishade.fx
!!NVfp4.0
# cgc version 3.0.0015, build date Nov 15 2010
# command line args: -oglsl -profile gpu_fp
# source file: multishade.fx
#vendor NVIDIA Corporation
#version 3.0.0.15
#profile gpu_fp
#program main
#semantic input
#semantic multishade_r
#semantic multishade_g
#semantic multishade_b
#var float4 gl_TexCoord[0] : $vin.TEX0 : TEX0 : -1 : 1
#var float4 gl_TexCoord[1] :  :  : -1 : 0
#var float4 gl_TexCoord[2] :  :  : -1 : 0
#var float4 gl_TexCoord[3] :  :  : -1 : 0
#var float4 gl_TexCoord[4] :  :  : -1 : 0
#var float4 gl_TexCoord[5] :  :  : -1 : 0
#var float4 gl_TexCoord[6] :  :  : -1 : 0
#var float4 gl_TexCoord[7] :  :  : -1 : 0
#var float4 gl_FragColor : $vout.COLOR : COL0[0] : -1 : 1
#var sampler2D input :  : texunit 0 : -1 : 1
#var float4 multishade_r :  : c[0] : -1 : 1
#var float4 multishade_g :  : c[1] : -1 : 1
#var float4 multishade_b :  : c[2] : -1 : 1
PARAM c[3] = { program.local[0..2] };
ATTRIB fragment_texcoord[] = { fragment.texcoord[0..0] };
TEMP R0, R1;
TEMP RC, HC;
OUTPUT result_color0 = result.color;
TEX.F R0, fragment.texcoord[0], texture[0], 2D;
SNE.F R1.x, R0, {0};
TRUNC.U.CC HC.x, R1;
IF    NE.x;
MUL.F R0.w, R0, c[0];
ELSE;
SNE.F R1.x, R0.y, {0};
TRUNC.U.CC HC.x, R1;
IF    NE.x;
MUL.F R0.w, R0, c[1];
ELSE;
SNE.F R1.x, R0.z, {0};
TRUNC.U.CC HC.x, R1;
IF    NE.x;
MUL.F R0.w, R0, c[2];
ELSE;
MOV.F R0.w, {0}.x;
ENDIF;
ENDIF;
ENDIF;
MUL.F R1.x, R0.y, c[1];
MAD.F R1.x, R0.z, c[2], R1;
MAD.F result_color0.x, R0, c[0], R1;
MUL.F R1.x, R0.y, c[1].y;
MUL.F R0.y, R0, c[1].z;
MAD.F R1.x, R0.z, c[2].y, R1;
MAD.F R0.y, R0.z, c[2].z, R0;
MAD.F result_color0.y, R0.x, c[0], R1.x;
MAD.F result_color0.z, R0.x, c[0], R0.y;
MOV.F result_color0.w, R0;
END
# 30 instructions, 2 R-regs
