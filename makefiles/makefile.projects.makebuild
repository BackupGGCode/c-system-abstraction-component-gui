
ifeq '$(SETGOALS)' ''
SETGOALS=$(PROJECTS)
endif

define REAL_DOMAKE
   $(QUIET)echo $(3) $(if $(filter-out $(SACK_BASE) $(_FINALDEST),$(1)),$(CURDIR)/,)$(1)...
   $(QUIET)$(SACK_BASE)/makefiles/echoto $(RINTDEST)/Makefile.cache -include $$($(BUILDNAME)Path)$(if $(filter-out $(SACK_BASE) $(_FINALDEST),$(1)),$(CURDIR)/,)$(1)/$(RINTDEST)/Makefile.cache $(4)
   $(QUIET)$(MAKE) $($(QUIET),-s,) $(2) makebuild
endef
# $(warning  adfasdfasfdasdfadsf                                                                      $(foreach PROJ,$(PROJECTS),$(CURDIR)/$(PROJ)/$(RINTDEST)/Makefile.cache )  $(if $(filter-out $(SACK_BASE) $(_FINALDEST),$(1)),$(CURDIR)/,)$()/$(RINTDEST)/Makefile.cache )
fakeall: $(foreach PROJ,$(PROJECTS),$(PROJ)/$(RINTDEST)/Makefile.cache )

#$(warning $(foreach PROJ,$(PROJECTS),$(PROJ)/$(RINTDEST)/Makefile.cache) )
$(foreach PROJ,$(PROJECTS),$(PROJ)/$(RINTDEST)/Makefile.cache): FORCE $(BUILD_DEP)
	$(QUIET)echo -include $(CURDIR)/$(@) >> $(subst /,\,$(INTDEST)/Makefile.cache)
	$(QUIET)$(MAKE) -C $(dir $@).. makebuild

.PHONY: $(PROJECTS)

.DEFAULT:
	echo makebuild missing $@
        
ifneq '$(Makefile_cache_included)$(filter makebuild distclean clean,$(MAKECMDGOALS))' '1'
#$(warning defining project rules with $$(DEFAULT))
.PHONY: $(PROJECTS)
$(PROJECTS):
	echo make project uhh makebuild...
endif
#sendif

$(SACK_BASE)/makefiles/makefile.projects.makebuild: ;
