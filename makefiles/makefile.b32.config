ifndef CONFIG_FILE_INCLUDED
CONFIG_FILE_INCLUDED=1
# gcc 3.2 
CXFLAGS1+=-DHAVE_ANONYMOUS_STRUCTURES
CXFLAGS2+=-DHAVE_ANONYMOUS_STRUCTURES


# build makefile rules/depends/targets with 8.3 limits...
# REQUIRE_SHORT_NAMES=1

ifdef WORDALIGN
ALIGN=-a
else
ALIGN=
endif

nullstring :=
space := $(nullstring) # end of the line
# exerpt from make manual (3.79.1) describing the above declaration 
# of $(space) ...
# Here the value of the variable space is precisely one 
# space. The comment `# end of the line' is included 
# here just for clarity. Since trailing space characters 
# are not stripped from variable values, just a space at 
# the end of the line would have the same effect (but be 
# rather hard to read). If you put whitespace at the end 
# of a variable value, it is a good idea to put a comment
# like that at the end of the line to make your intent 
# clear.

SYSPATHCHAR:=$(subst /,\,/)
PATHCHAR:=$(subst /,\,/)
OBJEXT=obj
LIBEXT=.lib
LINK_LIBEXT=.lib
LIBPREFIX=
LIBNAMEPREFIX=
SHLIBEXT=.dll
PROGEXT=.exe
OUTNAMEOPT=-o
MAPOUTOPT=-map$(space)

MAKE_DLL_OPT=
LD_OUTNAMEOPT=
LD_DEBUG_FLAGS=-c -v+ -s -m
LD_RELEASE_FLAGS=-c -v- -m

SUBSYSOPT=
LN_OUTNAMEOPT=/out:
LIBPATHOPT=;

USE_LINK_RULES=1
ifdef USE_NASM_ASSEMBLER
AFLAGS=-f obj -i$(SACK_BASE)/include/nasm/ -D__MSVC__ -DBCC32 $(STATFLAGS)
ASM=nasm
HAVE_NASM=1
else
HAVE_TASM=1
#AFLAGS=$(STATFLAGS)
#ASM=run tasm
define ASMRULE
	tasm32 /mx/zi/m5 $(subst /,\\,$(2)),$(subst /,\\,$(1)) /dBCC32
endef
endif

#1 = shortname (add .map, etc...)
# 2 = progname 
# 3 = flags
# 4 = objects
# 5 = libs
# 6 = def
# 7 = shortest name
# 8 = default libs
# 9 = libpaths
# 10= resource name

define LIBLINKRULE
	ilink32 /L$(subst $(space),,$(LIB)$(subst /,\,$(9))) /Tpd /Gn /Gi /I$(DEST) c0d32.obj $(subst /,\,$(4)),$(subst /,\,$(2)),$(subst /,\,$(1)).map,cw32mti import32 $(subst /,\,$(5)),$(6),$(10)
endef
	#-fe $(2) $(9)

#1 = shortname (add .map, etc...)
# 2 = progname 
# 3 = flags
# 4 = objects
# 5 = libs
# 6 = def
# 7 = shortest name
# 8 = default libs
# 9 = library paths
# 10= resource name

define CON_PRGLINKRULE
	ilink32 /L$(subst $(space),,$(LIB)$(subst /,\,$(9))) /ap -Tpe -Gn -Gi /I$(DEST) c0x32.obj $(subst /,\,$(4)),$(subst /,\,$(2)),$(subst /,\,$(1)).map,cw32mti import32 $(subst /,\,$(5)),$(6),$(10)
endef

define WIN_PRGLINKRULE
	ilink32 /L$(subst $(space),,$(LIB)$(subst /,\,$(9))) /aa -Tpe -Gn -Gi /I$(DEST) c0w32.obj $(subst /,\,$(4)),$(subst /,\,$(2)),$(subst /,\,$(1)).map,cw32mti import32 $(subst /,\,$(5)),$(6),$(10)
endef

C_RELEASE_FLAGS=-X 
C_DEBUG_FLAGS=-X -v -y -D_DEBUG 
CC=bcc32 -DBCC32 -c -DEMPTY_STRUCT="void" -D_MT -q -w-ccc -w-rch
         
#define CCRULE
#	bcc32 -3 -c -DBCC32 -mc -I$(INCLUDE) $(2)
#endef


LD=tlink32
LD_DEF_OPT=
AR=tlib32
RC_OUT_OPT=-fo
RC=brc32 -r

# how to make the templist of names...
MAKEDEPLIST=$(sort $(subst \,/,$(shell lcc -M $(filter-out -a -y -v,$(CFLAGS) $($(CXFLAGSX))) $< )))
# what to do with the templist...
define MAKEDEPEND
	@echo lcc -M $(filter-out -a -y -v,$(CFLAGS) $($(CXFLAGSX))) $<
	@echo $@: $< $(1) > $(2)
endef



ifneq '$(COM_PROGNAME)' ''

	OUTNAMES+=$(DEST)/$(COM_PROGNAME).com
	PROGNAME=$(COM_PROGNAME)
$(DEST)/%.com:$(DEST)/%.exe
	   TDSTRP32 -s -c $< $@

	
endif
endif