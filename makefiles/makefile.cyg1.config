
#CXFLAGS+=-DHAS_ASSEMBLY
#HAVE_NASM=1

# BAG is used when compiling internals... like bag, video, and image which cannot use PSI
# PSI is entirely on top of all of these
COMMON_LIBS+=$(if $(SACK_BUILD),sack,$(if $(BAG),,$(if $(__NO_GUI__),,bag.psi)) $(if $(__NO_AUTO_LIBS__),,bag))

ifdef WORDALIGN
ALIGN=-Zp2
else
ALIGN=-Zp1
endif


__WINDOWS__=1 
#export __WINDOWS__

nullstring :=
space := $(nullstring) # end of the line
# exerpt from make manual (3.79.1) describing the above declaration 
# of $(space) ...
# Here the value of the variable space is precisely one 
# space. The comment `# end of the line' is included 
# here just for clarity. Since trailing space characters 
# are not stripped from variable values, just a space at 
# the end of the line would have the same effect (but be 
# rather hard to read). If you put whitespace at the end 
# of a variable value, it is a good idea to put a comment
# like that at the end of the line to make your intent 
# clear.
SYSPATHCHAR=/
PATHCHAR=/
SHARED_ONLY=1

EXEOBJS=$(if $(__NO_AUTO_LIBS__),,$(SACK_BASE)/src/deadstart/deadstart)
LIBOBJS=$(if $(__NO_AUTO_LIBS__),,$(SACK_BASE)/src/deadstart/deadstart_lib)
# cygwin linking order is backwards?!
ALL_POST_OBJS=$(if $(__NO_AUTO_LIBS__),,$(SACK_BASE)/src/deadstart/deadstart_list)
ALL_PRE_OBJS=$(if $(__NO_AUTO_LIBS__),,$(SACK_BASE)/src/deadstart/deadstart_end)

OBJEXT=o
LIBEXT=.a
LINK_LIBEXT=    #the extension needed to pass to the linker...
LIBPREFIX=-l
LIBNAMEPREFIX=lib
SHLIBEXT=.dll
PROGEXT=.exe
OUTNAMEOPT=-o
MAPOUTOPT=-Map$(space)
#MAKE_DLL_OPT=--dll
LD_OUTNAMEOPT=-o$(space)
LN_OUTNAMEOPT=-o$(space)
LIBPATHOPT=-L
__CYGWIN__=1
#-fno-builtin 
C_COMMON_FLAGS=-isystem /usr/include/cygwin -isystem /usr/include -D__CYGWIN__ -DGCC -DEMPTY_STRUCT="struct{ _8 data[0]; }" -D__WINDOWS__ $(C_DEPEND_FLAGS) $(MKCFLAGS)
C_RELEASE_FLAGS=-O $(C_FLAGS_COMMON)
C_DEBUG_FLAGS=-g -Wall $(C_FLAGS_COMMON)
C_DEPEND_FLAGS=-MMD -MF$(@:.o=.d)

ifeq '$(DEST_TYPE)' 'DEBUG'
LD_DEBUG_FLAGS=-g 
CC=$(QUIETCMD)gcc -D_DEBUG -g -c $(C_COMMON_FLAGS)
LD=$(QUIETCMD)ld -g
else
LD_RELEASE_FLAGS= 
CC=$(QUIETCMD)gcc -c $(C_COMMON_FLAGS)
LD=$(QUIETCMD)ld
endif

# -lmsvcrt
LD_MOREFLAGS=-L/usr/lib/w32api -lwinmm -ladvapi32 -luser32 -lgdi32 -lkernel32 -lshell32 -lwsock32 -L/usr/lib/gcc/i686-pc-cygwin/3.4.4 -lgcc

#-Wl,--out-impfile=$(FINALDEST)/lib$(7).dll 

USES_RPATH=1
USE_LINK_RULES=1


# 4 = object file list
# 5 = more_libs
# 7 = short_name
# 9 = additional libinclude paths with -L
# 10 = resources
# 11 = ?
# 12 = yesno wehter this thing is literal libname (yes or blank)
# 13 = list of literal libraries to link against
#        -Wl,--export-all-symbols \
#	    -Wl,--enable-auto-import \
#	    -Wl,--whole-archive ${old_libs} \
#	    -Wl,--no-whole-archive
define LIBLINKRULE
	$(QUIETCMD)gcc $(LD_DEBUG_FLAGS) -shared \
        	-Wl,--export-all-symbols\
        	-Wl,--out-implib,$(FINALDEST)$(LIBPATH)/$(RINTDEST)/$(LIBNAMEPREFIX)$(7)$(LIBEXT)  \
	        $(3) -Wl,-Map=$(1).map -o $(2)$(if $(suffix $(notdir $(2))),,.) \
 		$(4) $(10) $(9) $(5) $(COMMON_SYS_LIBS) $(WLINK_EXTRA) $(LD_MOREFLAGS) \
		 -L$(FINALDEST)$(LIBPATH)/$(RINTDEST) $(foreach lib,$(13),-l$(lib))
endef
#        $(QUIETCMD)echo EXPORTS > $(1).def
#	$(QUIETCMD)nm $(2) | grep ' T _' | sed 's/.* T _//' >> $(1).def
#s	$(QUIETCMD)dlltool --def $(1).def --dllname $(if $(12),,$(LIBNAMEPREFIX))$(7)$(if $(12),,$(SHLIBEXT)) --output-lib $(FINALDEST)$(LIBPATH)/$(RINTDEST)/$(LIBNAMEPREFIX)$(7)$(LIBEXT)


#-nodefaultlibs -nostartfiles -nostdlib /usr/lib/mingw/crt2.o
define CON_PRGLINKRULE
	$(QUIETCMD)gcc $(LD_DEBUG_FLAGS) -Wl,--export-all-symbols $(3) -Wl,-Map,$(1).map -o $(2)$(if $(suffix $(notdir $(2))),,.) $(4) $(10) $(9)  $(5) $(COMMON_SYS_LIBS) $(WLINK_EXTRA) $(LD_MOREFLAGS) -L$(FINALDEST)$(LIBPATH)/$(RINTDEST) $(foreach lib,$(13),-l$(lib))
endef

define WIN_PRGLINKRULE
	$(QUIETCMD)gcc $(LD_DEBUG_FLAGS) -Wl,--export-all-symbols $(3) -Wl,-Map,$(1).map -o $(2)$(if $(suffix $(notdir $(2))),,.) $(4) $(10) $(9)  $(5) $(COMMON_SYS_LIBS) $(WLINK_EXTRA) $(LD_MOREFLAGS) -L$(FINALDEST)$(LIBPATH)/$(RINTDEST) $(foreach lib,$(13),-l$(lib))
endef


AR=$(QUIETCMD)ar
RC=windres -O coff
ASM=nasm -i$(SACK_BASE)/include/nasm/ -D__WATCOM__ -f win32


