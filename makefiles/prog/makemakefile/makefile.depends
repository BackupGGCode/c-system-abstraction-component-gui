
ifeq '$(filter distclean,$(MAKECMDGOALS))' ''

$(SACK_BASE)/makefiles/prog/makemakefile/mmf.c mmf.c: ;

$(SACK_BASE)/makefiles/prog/makemakefile/makefile.$(COMPILER): ;

$(SACK_BASE)/makefiles/$(RINTDEST)/mm$(PROGEXT):   \
	$(SACK_BASE)/makefiles/prog/makemakefile/mmf.c \
	$(SACK_BASE)/makefiles/prog/makemakefile/makefile.$(COMPILER) \
         | $(SACK_BASE)/makefiles/$(RINTDEST)
# redo the make... since apparently reloading makefile include don't work.
#	$(MAKE) $(MAKECMDGOALS)
# now I MUST abort make without failure.        
	echo MAKE MM.EXE!
	$(MAKE) -C $(SACK_BASE)/makefiles/prog/makemakefile -f makefile.$(COMPILER) $(filter distclean,$(MAKECMDGOALS))

#$(SACK_BASE)/makefiles: ;
#. bin lib $(CURDIR):;
#$(FINALDEST):
#	mkdir $@

# make and run MakeMakeFile (mmf)
define RUNMM
	$(SACK_BASE)/makefiles/$(RINTDEST)/mm $(SACK_BASE)/makefiles/$(RINTDEST)
endef     
endif
#	$(subst /,$(SYSPATHCHAR),$(SACK_BASE)/makefiles/$(RINTDEST)/mm) $(SACK_BASE)/makefiles/$(RINTDEST)

$(SACK_BASE)/makefiles/prog/makemakefile/makefile.depends: ;
