
# gcc 3.2 
CXFLAGS1+=-DHAVE_ANONYMOUS_STRUCTURES
CXFLAGS2+=-DHAVE_ANONYMOUS_STRUCTURES
HAVE_ASSEMBLY=0

# build makefile rules/depends/targets with 8.3 limits...
REQUIRE_SHORT_NAMES=1

ifdef WORDALIGN
ALIGN=-a
else
ALIGN=
endif

nullstring :=
space := $(nullstring) # end of the line
# exerpt from make manual (3.79.1) describing the above declaration 
# of $(space) ...
# Here the value of the variable space is precisely one 
# space. The comment `# end of the line' is included 
# here just for clarity. Since trailing space characters 
# are not stripped from variable values, just a space at 
# the end of the line would have the same effect (but be 
# rather hard to read). If you put whitespace at the end 
# of a variable value, it is a good idea to put a comment
# like that at the end of the line to make your intent 
# clear.

SYSPATHCHAR:=$(subst \\,\,\\)
PATHCHAR:=$(subst \\,\,\\)
OBJEXT=ob
LIBEXT=.lib
LINK_LIBEXT=.lib
LIBPREFIX=
LIBNAMEPREFIX=
SHLIBEXT=.dll
PROGEXT=.exe
OUTNAMEOPT=-o
MAPOUTOPT=-map$(space)
MAKE_DLL_OPT=-dll
LD_OUTNAMEOPT=
LD_DEBUG_FLAGS=
LD_RELEASE_FLAGS=-s
SUBSYSOPT=
LN_OUTNAMEOPT=/out:
LIBPATHOPT=;

USE_LINK_RULES=1
#AFLAGS=$(STATFLAGS)
#ASM=run tasm
define ASMRULE
	run tasmx /mx/zi/m5 $(subst /,\\,$(2)),$(subst /,\\,$(1))
endef


#1 = shortname (add .map, etc...)
# 2 = progname 
# 3 = objects
# 4 = libs
# 5 = def
# 6 = options
# 7 = default libs
# 8 = libpaths
# 9 = resource name


define LIBLINKRULE
	echo /L$(subst /,\,$(subst $(space),,$(LIB)$(8))) /Twd $(6) c0dc $(subst /,\,$(3)),$(subst /,\,$(2)),$(subst /,\,$(1)).map,cwc import $(7) $(subst /,\,$(4)),$(subst /,\,$(5)) > tlink.tmp
	run tlink @tlink.tmp
	$(subst \\,/,$(D_COMP))/bin/implib $(1).lib $(1).dll
	rc $(9) $(2)
endef
	#-fe $(2) $(9)

#1 = shortname (add .map, etc...)
# 2 = progname 
# 3 = objects
# 4 = libs
# 5 = def
# 6 = options
# 7 = default libs
# 8 = library paths
# 9 = resource name

define CON_PRGLINKRULE
	echo /L$(subst /,\,$(subst $(space),,$(LIB)$(8))) /Twe $(6) c0wc.obj $(subst /,\,$(3)),$(subst /,\,$(2)),$(subst /,\,$(1)).map,cwc import $(subst /,\,$(4)),$(subst /,\,$(5)) > tlink.tmp
	run tlink @tlink.tmp
endef

define WIN_PRGLINKRULE
	echo /L$(subst /,\,$(subst $(space),,$(LIB)$(8))) /Twe $(6) c0wc.obj $(subst /,\,$(3)),$(subst /,\,$(2)),$(subst /,\,$(1)).map,cwc import $(subst /,\,$(4)),$(subst /,\,$(5)) > tlink.tmp
	run tlink @tlink.tmp
endef

C_RELEASE_FLAGS=
C_DEBUG_FLAGS=-v -y -D_DEBUG 
CC=run bcc 

define CCRULE
	echo -3 -c -DBCC16 -mc -I$(INCLUDE) $(2) $(3)$(4) $(5) >bcc.tmp
	run bcc @bcc.tmp
endef


LD=run tlink
LD_DEF_OPT=
AR=run tlib
RC_OUT_OPT=-fo
RC=run brc -r

# how to make the templist of names...
MAKEDEPLIST=$(sort $(subst \,/,$(shell lcc -M $(filter-out -a -y -v,$(CFLAGS) $($(CXFLAGSX))) $< )))
# what to do with the templist...
define MAKEDEPEND
	@echo lcc -M $(filter-out -a -y -v,$(CFLAGS) $($(CXFLAGSX))) $<
	@echo $@: $< $(1) > $(2)
endef



ifneq '$(COM_PROGNAME)' ''

	OUTNAMES+=$(DEST)/$(COM_PROGNAME).com
	PROGNAME=$(COM_PROGNAME)
$(DEST)/%.com:$(DEST)/%.exe
	  run TDSTRIP -s -c $< $@

	
endif
