ifndef CONFIG_FILE_INCLUDED
CONFIG_FILE_INCLUDED=1
# gcc 3.2 
LCC_SUCK_FACTOR=1

MKCFLAGS=-DHAVE_GOOD_VA_ARGS -DHAVE_ANONYMOUS_STRUCTURES
ASM_C_FLAGS=-DHAS_ASSEMBLY
HAVE_NASM=1

ifdef WORDALIGN
ALIGNMENT=-Zp2
else
ALIGNMENT=-Zp1
endif

nullstring :=
space := $(nullstring) # end of the line
# exerpt from make manual (3.79.1) describing the above declaration 
# of $(space) ...
# Here the value of the variable space is precisely one 
# space. The comment `# end of the line' is included 
# here just for clarity. Since trailing space characters 
# are not stripped from variable values, just a space at 
# the end of the line would have the same effect (but be 
# rather hard to read). If you put whitespace at the end 
# of a variable value, it is a good idea to put a comment
# like that at the end of the line to make your intent 
# clear.

HERE:=$(shell cd)
SYSPATHCHAR:=$(subst \\,\,\\)
PATHCHAR=\\
OBJEXT=obj
LIBEXT=.lib
LINK_LIBEXT=.lib
LIBPREFIX=
LIBNAMEPREFIX=
SHLIBEXT=.dll
PROGEXT=.exe
OUTNAMEOPT=-Fo
MAPOUTOPT=-map$(space)
MAKE_DLL_OPT=-dll
LD_OUTNAMEOPT=/o$(space)
LD_DEBUG_FLAGS=
LD_RELEASE_FLAGS=-s
SUBSYSOPT=/subsystem:
LN_OUTNAMEOPT=/out:
LIBPATHOPT=-L
C_COMMON_FLAGS=-DEMPTY_STRUCT="struct { char data[]; }" $(ASM_C_FLAGS) $(MKCFLAGS)
C_RELEASE_FLAGS=
C_DEBUG_FLAGS=-D_DEBUG
ifeq '$(filter debug static_debug,$(DEST))' ''
CC=lcc $(ALIGNMENT)
else
CC=lcc -A -g2 $(ALIGNMENT)
endif
CXX=$(CC)
PPCCPP=$(SACK_BASE)/makefiles/ppc

define CCRULE
	$(subst /,$(SYSPATHCHAR),$(SACK_BASE)/makefiles/ppc) -f -l -D__LCC__ $(C_COMMON_FLAGS) $(1) -o$(2:.$(OBJEXT)=.i) $(3) -MF$(4) -MT$(2) -K
	$(CC) $(5) $(OUTNAMEOPT)$(subst /,$(SYSPATHCHAR),$(2)) $(subst /,$(SYSPATHCHAR),$(2:.$(OBJEXT)=.i))
endef
CXXRULE=$(CCRULE)


LD=lcclnk
LD_DEF_OPT=$(space)
AR=lcclib
RC_OUT_OPT=/o
RC=lrc

AFLAGS=-f win32 -i$(CURDIR)/ -i$(SACK_BASE)/include/nasm/ -D__LCC__ $(STATFLAGS)
ASM=nasm

# these are now accurately taken care of by ppc...

# how to make the templist of names...
#MAKEDEPLIST=$(sort $(subst \,/,$(shell lcc -M $(CFLAGS) $($(CXFLAGSX)) $< )))
# what to do with the templist...
#	echo $@: $< $(1) > $(subst /,$(SYSPATHCHAR),$(2))
define MAKEDEPEND
endef
endif

